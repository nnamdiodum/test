import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SchemaParser {

    public static Map<String, Map<String, Object>> parseSchemas(String content) {
        Map<String, Map<String, Object>> schemaMap = new HashMap<>();

        // Pattern to match schema names and their fields
        Pattern schemaPattern = Pattern.compile("schema (\\w+) = KeyValue\\[Class: \\{“(\\w+)”\\}\\]:(.*?)(?=\\n\\n|$)", Pattern.DOTALL);
        Matcher schemaMatcher = schemaPattern.matcher(content);

        while (schemaMatcher.find()) {
            String schemaName = schemaMatcher.group(1);
            Map<String, Object> fieldsMap = new HashMap<>();

            // Extracting fields and their types
            String fieldsBlock = schemaMatcher.group(3);
            Pattern fieldPattern = Pattern.compile("\\t(\\w+): (\\w+)|\\t\\((\\w+)\\) : (\\w+):\\t“([^”]+)”");
            Matcher fieldMatcher = fieldPattern.matcher(fieldsBlock);

            while (fieldMatcher.find()) {
                String fieldName = fieldMatcher.group(1) != null ? fieldMatcher.group(1) : fieldMatcher.group(3);
                String fieldType = fieldMatcher.group(2) != null ? fieldMatcher.group(2) : fieldMatcher.group(4) + ": " + fieldMatcher.group(5);
                fieldsMap.put(fieldName, fieldType);
            }

            schemaMap.put(schemaName, fieldsMap);
        }

        return schemaMap;
    }
    
    public static void main(String[] args) {
        String content = "your schema content"; // Load your content here
        Map<String, Map<String, Object>> schemaMap = parseSchemas(content);
        
        // Print the schemaMap to verify
        schemaMap.forEach((key, value) -> System.out.println(key + ": " + value));
    }
}
